{"remainingRequest":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src/main.vue","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDUmVuZGVyIGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXInCgppbXBvcnQgJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi9leHRlbmQvaW5kZXgnCgppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcKCmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdkRpZ2l0YWxGbG9wJywKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KQogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICByZW5kZXJlcjogbnVsbCwKCiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIGZvciBkaWdpdGFsIGZsb3AKICAgICAgICAgKiBAdHlwZSB7QXJyYXk8TnVtYmVyPn0KICAgICAgICAgKiBAZGVmYXVsdCBudW1iZXIgPSBbXQogICAgICAgICAqIEBleGFtcGxlIG51bWJlciA9IFsxMF0KICAgICAgICAgKi8KICAgICAgICBudW1iZXI6IFtdLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDb250ZW50IGZvcm1hdHRlcgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgY29udGVudCA9ICcnCiAgICAgICAgICogQGV4YW1wbGUgY29udGVudCA9ICd7bnR95LiqJwogICAgICAgICAqLwogICAgICAgIGNvbnRlbnQ6ICcnLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBOdW1iZXIgdG9GaXhlZAogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgICogQGRlZmF1bHQgdG9GaXhlZCA9IDAKICAgICAgICAgKi8KICAgICAgICB0b0ZpeGVkOiAwLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBUZXh0IGFsaWduCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCB0ZXh0QWxpZ24gPSAnY2VudGVyJwogICAgICAgICAqIEBleGFtcGxlIHRleHRBbGlnbiA9ICdjZW50ZXInIHwgJ2xlZnQnIHwgJ3JpZ2h0JwogICAgICAgICAqLwogICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIHJvd0dhcAogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgIEBkZWZhdWx0IHJvd0dhcCA9IDAKICAgICAgICAgKi8KICAgICAgICByb3dHYXA6IDAsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgc3R5bGUgY29uZmlndXJhdGlvbgogICAgICAgICAqIEB0eXBlIHtPYmplY3R9IHtDUmVuZGVyIENsYXNzIFN0eWxlfQogICAgICAgICAqLwogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBmb250U2l6ZTogMzAsCiAgICAgICAgICBmaWxsOiAnIzNkZTdjOScKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBOdW1iZXIgZm9ybWF0dGVyCiAgICAgICAgICogQHR5cGUge051bGx8RnVuY3Rpb259CiAgICAgICAgICovCiAgICAgICAgZm9ybWF0dGVyOiB1bmRlZmluZWQsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uQ3VydmUKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGFuaW1hdGlvbkN1cnZlID0gJ2Vhc2VPdXRDdWJpYycKICAgICAgICAgKi8KICAgICAgICBhbmltYXRpb25DdXJ2ZTogJ2Vhc2VPdXRDdWJpYycsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uRnJhbWUKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGFuaW1hdGlvbkZyYW1lID0gNTAKICAgICAgICAgKi8KICAgICAgICBhbmltYXRpb25GcmFtZTogNTAKICAgICAgfSwKCiAgICAgIG1lcmdlZENvbmZpZzogbnVsbCwKCiAgICAgIGdyYXBoOiBudWxsCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY29uZmlnICgpIHsKICAgICAgY29uc3QgeyB1cGRhdGUgfSA9IHRoaXMKCiAgICAgIHVwZGF0ZSgpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0ICgpIHsKICAgICAgY29uc3QgeyBpbml0UmVuZGVyLCBtZXJnZUNvbmZpZywgaW5pdEdyYXBoIH0gPSB0aGlzCgogICAgICBpbml0UmVuZGVyKCkKCiAgICAgIG1lcmdlQ29uZmlnKCkKCiAgICAgIGluaXRHcmFwaCgpCiAgICB9LAogICAgaW5pdFJlbmRlciAoKSB7CiAgICAgIGNvbnN0IHsgJHJlZnMgfSA9IHRoaXMKCiAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgQ1JlbmRlcigkcmVmc1snZGlnaXRhbC1mbG9wJ10pCiAgICB9LAogICAgbWVyZ2VDb25maWcgKCkgewogICAgICBjb25zdCB7IGRlZmF1bHRDb25maWcsIGNvbmZpZyB9ID0gdGhpcwoKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb25maWcsIHRydWUpLCBjb25maWcgfHwge30pCiAgICB9LAogICAgaW5pdEdyYXBoICgpIHsKICAgICAgY29uc3QgeyBnZXRTaGFwZSwgZ2V0U3R5bGUsIHJlbmRlcmVyLCBtZXJnZWRDb25maWcgfSA9IHRoaXMKCiAgICAgIGNvbnN0IHsgYW5pbWF0aW9uQ3VydmUsIGFuaW1hdGlvbkZyYW1lIH0gPSBtZXJnZWRDb25maWcKCiAgICAgIGNvbnN0IHNoYXBlID0gZ2V0U2hhcGUoKQogICAgICBjb25zdCBzdHlsZSA9IGdldFN0eWxlKCkKCiAgICAgIHRoaXMuZ3JhcGggPSByZW5kZXJlci5hZGQoewogICAgICAgIG5hbWU6ICdudW1iZXJUZXh0JywKICAgICAgICBhbmltYXRpb25DdXJ2ZSwKICAgICAgICBhbmltYXRpb25GcmFtZSwKICAgICAgICBzaGFwZSwKICAgICAgICBzdHlsZQogICAgICB9KQogICAgfSwKICAgIGdldFNoYXBlICgpIHsKICAgICAgY29uc3QgeyBudW1iZXIsIGNvbnRlbnQsIHRvRml4ZWQsIHRleHRBbGlnbiwgcm93R2FwLCBmb3JtYXR0ZXIgfSA9IHRoaXMubWVyZ2VkQ29uZmlnCgogICAgICBjb25zdCBbdywgaF0gPSB0aGlzLnJlbmRlcmVyLmFyZWEKCiAgICAgIGNvbnN0IHBvc2l0aW9uID0gW3cgLyAyLCBoIC8gMl0KCiAgICAgIGlmICh0ZXh0QWxpZ24gPT09ICdsZWZ0JykgcG9zaXRpb25bMF0gPSAwCiAgICAgIGlmICh0ZXh0QWxpZ24gPT09ICdyaWdodCcpIHBvc2l0aW9uWzBdID0gdwoKICAgICAgcmV0dXJuIHsKICAgICAgICBudW1iZXIsCiAgICAgICAgY29udGVudCwKICAgICAgICB0b0ZpeGVkLAogICAgICAgIHBvc2l0aW9uLAogICAgICAgIHJvd0dhcCwKICAgICAgICBmb3JtYXR0ZXIKICAgICAgfQogICAgfSwKICAgIGdldFN0eWxlICgpIHsKICAgICAgY29uc3QgeyBzdHlsZSwgdGV4dEFsaWduIH0gPSB0aGlzLm1lcmdlZENvbmZpZwoKICAgICAgcmV0dXJuIGRlZXBNZXJnZShzdHlsZSwgewogICAgICAgIHRleHRBbGlnbiwKICAgICAgICB0ZXh0QmFzZWxpbmU6ICdtaWRkbGUnCiAgICAgIH0pCiAgICB9LAogICAgdXBkYXRlICgpIHsKICAgICAgY29uc3QgeyBtZXJnZUNvbmZpZywgbWVyZ2VTaGFwZSwgZ2V0U2hhcGUsIGdldFN0eWxlLCBncmFwaCwgbWVyZ2VkQ29uZmlnIH0gPSB0aGlzCgogICAgICBncmFwaC5hbmltYXRpb25FbmQoKQoKICAgICAgbWVyZ2VDb25maWcoKQoKICAgICAgaWYgKCFncmFwaCkgcmV0dXJuCgogICAgICBjb25zdCB7IGFuaW1hdGlvbkN1cnZlLCBhbmltYXRpb25GcmFtZSB9ID0gbWVyZ2VkQ29uZmlnCgogICAgICBjb25zdCBzaGFwZSA9IGdldFNoYXBlKCkKICAgICAgY29uc3Qgc3R5bGUgPSBnZXRTdHlsZSgpCgogICAgICBtZXJnZVNoYXBlKGdyYXBoLCBzaGFwZSkKCiAgICAgIGdyYXBoLmFuaW1hdGlvbkN1cnZlID0gYW5pbWF0aW9uQ3VydmUKICAgICAgZ3JhcGguYW5pbWF0aW9uRnJhbWUgPSBhbmltYXRpb25GcmFtZQoKICAgICAgZ3JhcGguYW5pbWF0aW9uKCdzdHlsZScsIHN0eWxlLCB0cnVlKQogICAgICBncmFwaC5hbmltYXRpb24oJ3NoYXBlJywgc2hhcGUpCiAgICB9LAogICAgbWVyZ2VTaGFwZSAoZ3JhcGgsIHNoYXBlKSB7CiAgICAgIGNvbnN0IGNhY2hlTnVtID0gZ3JhcGguc2hhcGUubnVtYmVyLmxlbmd0aAogICAgICBjb25zdCBzaGFwZU51bSA9IHNoYXBlLm51bWJlci5sZW5ndGgKCiAgICAgIGlmIChjYWNoZU51bSAhPT0gc2hhcGVOdW0pIGdyYXBoLnNoYXBlLm51bWJlciA9IHNoYXBlLm51bWJlcgogICAgfQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICBjb25zdCB7IGluaXQgfSA9IHRoaXMKCiAgICBpbml0KCkKICB9Cn0K"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src","sourcesContent":["<template>\n  <div class=\"dv-digital-flop\">\n    <canvas ref=\"digital-flop\" />\n  </div>\n</template>\n\n<script>\nimport CRender from '@jiaminghi/c-render'\n\nimport '@jiaminghi/charts/lib/extend/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDigitalFlop',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      renderer: null,\n\n      defaultConfig: {\n        /**\n         * @description Number for digital flop\n         * @type {Array<Number>}\n         * @default number = []\n         * @example number = [10]\n         */\n        number: [],\n        /**\n         * @description Content formatter\n         * @type {String}\n         * @default content = ''\n         * @example content = '{nt}个'\n         */\n        content: '',\n        /**\n         * @description Number toFixed\n         * @type {Number}\n         * @default toFixed = 0\n         */\n        toFixed: 0,\n        /**\n         * @description Text align\n         * @type {String}\n         * @default textAlign = 'center'\n         * @example textAlign = 'center' | 'left' | 'right'\n         */\n        textAlign: 'center',\n        /**\n         * @description rowGap\n         * @type {Number}\n         @default rowGap = 0\n         */\n        rowGap: 0,\n        /**\n         * @description Text style configuration\n         * @type {Object} {CRender Class Style}\n         */\n        style: {\n          fontSize: 30,\n          fill: '#3de7c9'\n        },\n        /**\n         * @description Number formatter\n         * @type {Null|Function}\n         */\n        formatter: undefined,\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50\n      },\n\n      mergedConfig: null,\n\n      graph: null\n    }\n  },\n  watch: {\n    config () {\n      const { update } = this\n\n      update()\n    }\n  },\n  methods: {\n    init () {\n      const { initRender, mergeConfig, initGraph } = this\n\n      initRender()\n\n      mergeConfig()\n\n      initGraph()\n    },\n    initRender () {\n      const { $refs } = this\n\n      this.renderer = new CRender($refs['digital-flop'])\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initGraph () {\n      const { getShape, getStyle, renderer, mergedConfig } = this\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      this.graph = renderer.add({\n        name: 'numberText',\n        animationCurve,\n        animationFrame,\n        shape,\n        style\n      })\n    },\n    getShape () {\n      const { number, content, toFixed, textAlign, rowGap, formatter } = this.mergedConfig\n\n      const [w, h] = this.renderer.area\n\n      const position = [w / 2, h / 2]\n\n      if (textAlign === 'left') position[0] = 0\n      if (textAlign === 'right') position[0] = w\n\n      return {\n        number,\n        content,\n        toFixed,\n        position,\n        rowGap,\n        formatter\n      }\n    },\n    getStyle () {\n      const { style, textAlign } = this.mergedConfig\n\n      return deepMerge(style, {\n        textAlign,\n        textBaseline: 'middle'\n      })\n    },\n    update () {\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\n\n      graph.animationEnd()\n\n      mergeConfig()\n\n      if (!graph) return\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      mergeShape(graph, shape)\n\n      graph.animationCurve = animationCurve\n      graph.animationFrame = animationFrame\n\n      graph.animation('style', style, true)\n      graph.animation('shape', shape)\n    },\n    mergeShape (graph, shape) {\n      const cacheNum = graph.shape.number.length\n      const shapeNum = shape.number.length\n\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"]}]}