{"remainingRequest":"/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js!/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/node_modules/eslint-loader/index.js??ref--13-0!/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/src/http/http.js","dependencies":[{"path":"/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/src/http/http.js","mtime":1601370726000},{"path":"/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/wjcwjc/Desktop/大学（临时）/大三上/2020301人立方/hcube-b/hcube-client/src/http/http.js"],"names":["axios","url","types","errors","BASE_URL","defaults","baseURL","Http","setToken","token","headers","common","clearToken","window","$vue","$storage","remove","TOKEN","$router","replace","$message","error","TOKEN_EXPIRE_TEXT","doLogin","account","password","Promise","resolve","reject","params","URLSearchParams","append","post","LOGIN","then","res","data","code","SUCCESS","TOKEN_EXPIRE","message","catch","err","modifyPassword","oldPassword","newPassword","MODIFY_PASSWORD","validOldPassword","VALID_OLD_PASSWORD","validAccount","get","VALID_ACCOUNT","queryUsers","condition","dir","QUERY_USERS","saveUser","user","SAVE_USER","deleteUser","id","delete","DELETE_USER","resetPassword","RESET_PASSWORD"],"mappings":";;;;;;;;;AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,gBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyBF,QAAzB;AAEA,IAAMG,IAAI,GAAG;AACX;;;;AAIAC,EAAAA,QALW,oBAKFC,KALE,EAKK;AACdT,IAAAA,KAAK,CAACK,QAAN,CAAeK,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDF,KAAjD;AACD,GAPU;;AAQX;;;AAGAG,EAAAA,UAXW,wBAWE;AACXC,IAAAA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBC,MAArB,CAA4Bd,KAAK,CAACe,KAAlC;AACAjB,IAAAA,KAAK,CAACK,QAAN,CAAeK,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,EAAjD;AACAE,IAAAA,MAAM,CAACC,IAAP,CAAYI,OAAZ,CAAoBC,OAApB,CAA4B,QAA5B;AACAN,IAAAA,MAAM,CAACC,IAAP,CAAYM,QAAZ,CAAqBC,KAArB,CAA2BlB,MAAM,CAACmB,iBAAlC;AACD,GAhBU;;AAiBX;;;;;AAKMC,EAAAA,OAtBK,mBAsBGC,OAtBH,EAsBYC,QAtBZ,EAsBsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACxB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,gBAAAA,MAAM,CAACE,MAAP,CAAc,SAAd,EAAyBP,OAAzB;AACAK,gBAAAA,MAAM,CAACE,MAAP,CAAc,UAAd,EAA0BN,QAA1B;AACAzB,gBAAAA,KAAK,CACFgC,IADH,CACQ/B,GAAG,CAACgC,KADZ,EACmBJ,MADnB,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAACQ,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAP;AACD,mBAFD,MAEO,IAAID,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,KAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAXH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAdH;AAeD,eAnBM,CADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBhC,GA3CU;;AA4CX;;;;;;AAMMC,EAAAA,cAlDK,0BAkDUnB,OAlDV,EAkDmBoB,WAlDnB,EAkDgCC,WAlDhC,EAkD6C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAC/C,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,gBAAAA,MAAM,CAACE,MAAP,CAAc,SAAd,EAAyBP,OAAzB;AACAK,gBAAAA,MAAM,CAACE,MAAP,CAAc,aAAd,EAA6Ba,WAA7B;AACAf,gBAAAA,MAAM,CAACE,MAAP,CAAc,aAAd,EAA6Bc,WAA7B;AACA7C,gBAAAA,KAAK,CACFgC,IADH,CACQ/B,GAAG,CAAC6C,eADZ,EAC6BjB,MAD7B,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAAC,MAAD,CAAP;AACD,mBAFD,MAEO,IAAIQ,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAXH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAdH;AAeD,eApBM,CAD+C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBvD,GAxEU;;AAyEX;;;;;AAKMK,EAAAA,gBA9EK,4BA8EYvB,OA9EZ,EA8EqBoB,WA9ErB,EA8EkC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACpC,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,gBAAAA,MAAM,CAACE,MAAP,CAAc,SAAd,EAAyBP,OAAzB;AACAK,gBAAAA,MAAM,CAACE,MAAP,CAAc,aAAd,EAA6Ba,WAA7B;AACA5C,gBAAAA,KAAK,CACFgC,IADH,CACQ/B,GAAG,CAAC+C,kBADZ,EACgCnB,MADhC,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAAC,MAAD,CAAP;AACD,mBAFD,MAEO,IAAIQ,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAXH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAdH;AAeD,eAnBM,CADoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqB5C,GAnGU;;AAoGX;;;;AAIMO,EAAAA,YAxGK,wBAwGQzB,OAxGR,EAwGiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACnB,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAMC,MAAM,GAAG;AACbA,kBAAAA,MAAM,EAAE;AACNL,oBAAAA,OAAO,EAAEA;AADH;AADK,iBAAf;AAKAxB,gBAAAA,KAAK,CACFkD,GADH,CACOjD,GAAG,CAACkD,aADX,EAC0BtB,MAD1B,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAAC,MAAD,CAAP;AACD,mBAFD,MAEO,IAAIQ,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAXH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAdH;AAeD,eArBM,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuB3B,GA/HU;;AAgIX;;;;AAIMU,EAAAA,UApIK,sBAoIMC,SApIN,EAoIiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACnB,IAAI3B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oBAAIyB,SAAS,CAACC,GAAV,KAAkB,WAAtB,EAAmC;AACjCD,kBAAAA,SAAS,CAACC,GAAV,GAAgB,KAAhB;AACD,iBAFD,MAEO,IAAID,SAAS,CAACC,GAAV,KAAkB,YAAtB,EAAoC;AACzCD,kBAAAA,SAAS,CAACC,GAAV,GAAgB,MAAhB;AACD;;AACDtD,gBAAAA,KAAK,CACFgC,IADH,CACQ/B,GAAG,CAACsD,WADZ,EACyBF,SADzB,EAEGnB,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;AACD,mBAFD,MAEO,IAAID,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAXH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAdH;AAeD,eArBM,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuB3B,GA3JU;;AA4JX;;;;AAIMc,EAAAA,QAhKK,oBAgKIC,IAhKJ,EAgKU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACZ,IAAI/B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC5B,gBAAAA,KAAK,CACFgC,IADH,CACQ/B,GAAG,CAACyD,SADZ,EACuBD,IADvB,EAEGvB,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;AACD,mBAFD,MAEO,IAAID,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAXH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAdH;AAeD,eAhBM,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBpB,GAlLU;;AAmLX;;;;AAIMiB,EAAAA,UAvLK,sBAuLMC,EAvLN,EAuLU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACZ,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC5B,gBAAAA,KAAK,CACF6D,MADH,CACU5D,GAAG,CAAC6D,WADd,EAC2B;AACvBjC,kBAAAA,MAAM,EAAE;AACN+B,oBAAAA,EAAE,EAAEA;AADE;AADe,iBAD3B,EAMG1B,IANH,CAMQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;AACD,mBAFD,MAEO,IAAID,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAfH,EAgBGC,KAhBH,CAgBS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAlBH;AAmBD,eApBM,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBpB,GA7MU;;AA8MX;;;;AAIMqB,EAAAA,aAlNK,yBAkNSH,EAlNT,EAkNa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACf,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC5B,gBAAAA,KAAK,CACFkD,GADH,CACOjD,GAAG,CAAC+D,cADX,EAC2B;AACvBnC,kBAAAA,MAAM,EAAE;AACN+B,oBAAAA,EAAE,EAAEA;AADE;AADe,iBAD3B,EAMG1B,IANH,CAMQ,UAAAC,GAAG,EAAI;AACX,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACmC,OAA7B,EAAsC;AACpCX,oBAAAA,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;AACD,mBAFD,MAEO,IAAID,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkBlC,MAAM,CAACoC,YAA7B,EAA2C;AAChD,oBAAA,MAAI,CAAC3B,UAAL;;AACAgB,oBAAAA,MAAM,CAACzB,MAAM,CAACmB,iBAAR,CAAN;AACD,mBAHM,MAGA;AACLM,oBAAAA,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASI,OAAV,CAAN;AACD;AACF,iBAfH,EAgBGC,KAhBH,CAgBS,UAAAC,GAAG,EAAI;AACZd,kBAAAA,MAAM,CAACc,GAAD,CAAN;AACD,iBAlBH;AAmBD,eApBM,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBvB;AAxOU,CAAb;AA2OA,eAAenC,IAAf","sourcesContent":["/**\r\n * Http请求\r\n */\r\nimport axios from \"axios\";\r\nimport * as url from \"./url\";\r\nimport * as types from \"../store/types\";\r\nimport * as errors from \"../assets/constant/errors\";\r\nimport { BASE_URL } from \"../assets/config/http.config\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst Http = {\r\n  /**\r\n   * 为axios设置token\r\n   * @param {String} token\r\n   */\r\n  setToken(token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  },\r\n  /**\r\n   * 清除token\r\n   */\r\n  clearToken() {\r\n    window.$vue.$storage.remove(types.TOKEN);\r\n    axios.defaults.headers.common[\"Authorization\"] = \"\";\r\n    window.$vue.$router.replace(\"/login\");\r\n    window.$vue.$message.error(errors.TOKEN_EXPIRE_TEXT);\r\n  },\r\n  /**\r\n   * 登录\r\n   * @param {String} account\r\n   * @param {String} password\r\n   */\r\n  async doLogin(account, password) {\r\n    return new Promise((resolve, reject) => {\r\n      const params = new URLSearchParams();\r\n      params.append(\"account\", account);\r\n      params.append(\"password\", password);\r\n      axios\r\n        .post(url.LOGIN, params)\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(res.data.data);\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 修改密码\r\n   * @param {String} account\r\n   * @param {String} oldPassword\r\n   * @param {String} newPassword\r\n   */\r\n  async modifyPassword(account, oldPassword, newPassword) {\r\n    return new Promise((resolve, reject) => {\r\n      const params = new URLSearchParams();\r\n      params.append(\"account\", account);\r\n      params.append(\"oldPassword\", oldPassword);\r\n      params.append(\"newPassword\", newPassword);\r\n      axios\r\n        .post(url.MODIFY_PASSWORD, params)\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(\"修改成功\");\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 验证旧密码\r\n   * @param {String} account\r\n   * @param {String} oldPassword\r\n   */\r\n  async validOldPassword(account, oldPassword) {\r\n    return new Promise((resolve, reject) => {\r\n      const params = new URLSearchParams();\r\n      params.append(\"account\", account);\r\n      params.append(\"oldPassword\", oldPassword);\r\n      axios\r\n        .post(url.VALID_OLD_PASSWORD, params)\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(\"验证成功\");\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 验证账号是否存在\r\n   * @param {String} account\r\n   */\r\n  async validAccount(account) {\r\n    return new Promise((resolve, reject) => {\r\n      const params = {\r\n        params: {\r\n          account: account\r\n        }\r\n      };\r\n      axios\r\n        .get(url.VALID_ACCOUNT, params)\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(\"验证成功\");\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 分页查询用户列表\r\n   * @param {Object} condition\r\n   */\r\n  async queryUsers(condition) {\r\n    return new Promise((resolve, reject) => {\r\n      if (condition.dir === \"ascending\") {\r\n        condition.dir = \"asc\";\r\n      } else if (condition.dir === \"descending\") {\r\n        condition.dir = \"desc\";\r\n      }\r\n      axios\r\n        .post(url.QUERY_USERS, condition)\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(res.data);\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 保存用户\r\n   * @param {Object} user\r\n   */\r\n  async saveUser(user) {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(url.SAVE_USER, user)\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(res.data);\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 删除用户\r\n   * @param {Number} id\r\n   */\r\n  async deleteUser(id) {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .delete(url.DELETE_USER, {\r\n          params: {\r\n            id: id\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(res.data);\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  /**\r\n   * 重置密码\r\n   * @param {Number} id\r\n   */\r\n  async resetPassword(id) {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(url.RESET_PASSWORD, {\r\n          params: {\r\n            id: id\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data.code === errors.SUCCESS) {\r\n            resolve(res.data);\r\n          } else if (res.data.code === errors.TOKEN_EXPIRE) {\r\n            this.clearToken();\r\n            reject(errors.TOKEN_EXPIRE_TEXT);\r\n          } else {\r\n            reject(res.data.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n};\r\n\r\nexport default Http;\r\n"]}]}