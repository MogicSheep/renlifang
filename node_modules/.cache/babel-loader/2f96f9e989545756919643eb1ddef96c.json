{"remainingRequest":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL3dqY3dqYy9EZXNrdG9wL1x1NTkyN1x1NUI2Ni9cdTU5MjdcdTRFMDlcdTRFMEEvMjAyMDMwMVx1NEVCQVx1N0FDQlx1NjVCOS9oY3ViZS1iL2hjdWJlLWNsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCc7CmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdkNhcHN1bGVDaGFydCcsCiAgcHJvcHM6IHsKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2Fwc3VsZSBjaGFydCBkYXRhCiAgICAgICAgICogQHR5cGUge0FycmF5PE9iamVjdD59CiAgICAgICAgICogQGRlZmF1bHQgZGF0YSA9IFtdCiAgICAgICAgICogQGV4YW1wbGUgZGF0YSA9IFt7IG5hbWU6ICdmb28xJywgdmFsdWU6IDEwMCB9LCB7IG5hbWU6ICdmb28yJywgdmFsdWU6IDEwMCB9XQogICAgICAgICAqLwogICAgICAgIGRhdGE6IFtdLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ29sb3JzIChoZXh8cmdifHJnYmF8Y29sb3Iga2V5d29yZHMpCiAgICAgICAgICogQHR5cGUge0FycmF5PFN0cmluZz59CiAgICAgICAgICogQGRlZmF1bHQgY29sb3IgPSBbJyMzN2EyZGEnLCAnIzMyYzVlOScsICcjNjdlMGUzJywgJyM5ZmU2YjgnLCAnI2ZmZGI1YycsICcjZmY5ZjdmJywgJyNmYjcyOTMnXQogICAgICAgICAqIEBleGFtcGxlIGNvbG9yID0gWycjMDAwJywgJ3JnYigwLCAwLCAwKScsICdyZ2JhKDAsIDAsIDAsIDEpJywgJ3JlZCddCiAgICAgICAgICovCiAgICAgICAgY29sb3JzOiBbJyMzN2EyZGEnLCAnIzMyYzVlOScsICcjNjdlMGUzJywgJyM5ZmU2YjgnLCAnI2ZmZGI1YycsICcjZmY5ZjdmJywgJyNmYjcyOTMnXSwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENoYXJ0IHVuaXQKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IHVuaXQgPSAnJwogICAgICAgICAqLwogICAgICAgIHVuaXQ6ICcnLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gU2hvdyBpdGVtIHZhbHVlCiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgICAgICogQGRlZmF1bHQgc2hvd1ZhbHVlID0gZmFsc2UKICAgICAgICAgKi8KICAgICAgICBzaG93VmFsdWU6IGZhbHNlCiAgICAgIH0sCiAgICAgIG1lcmdlZENvbmZpZzogbnVsbCwKICAgICAgY2Fwc3VsZUxlbmd0aDogW10sCiAgICAgIGNhcHN1bGVWYWx1ZTogW10sCiAgICAgIGxhYmVsRGF0YTogW10sCiAgICAgIGxhYmVsRGF0YUxlbmd0aDogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29uZmlnOiBmdW5jdGlvbiBjb25maWcoKSB7CiAgICAgIHZhciBjYWxjRGF0YSA9IHRoaXMuY2FsY0RhdGE7CiAgICAgIGNhbGNEYXRhKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjYWxjRGF0YTogZnVuY3Rpb24gY2FsY0RhdGEoKSB7CiAgICAgIHZhciBtZXJnZUNvbmZpZyA9IHRoaXMubWVyZ2VDb25maWcsCiAgICAgICAgICBjYWxjQ2Fwc3VsZUxlbmd0aEFuZExhYmVsRGF0YSA9IHRoaXMuY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGE7CiAgICAgIG1lcmdlQ29uZmlnKCk7CiAgICAgIGNhbGNDYXBzdWxlTGVuZ3RoQW5kTGFiZWxEYXRhKCk7CiAgICB9LAogICAgbWVyZ2VDb25maWc6IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKCkgewogICAgICB2YXIgY29uZmlnID0gdGhpcy5jb25maWcsCiAgICAgICAgICBkZWZhdWx0Q29uZmlnID0gdGhpcy5kZWZhdWx0Q29uZmlnOwogICAgICB0aGlzLm1lcmdlZENvbmZpZyA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICB9LAogICAgY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGE6IGZ1bmN0aW9uIGNhbGNDYXBzdWxlTGVuZ3RoQW5kTGFiZWxEYXRhKCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMubWVyZ2VkQ29uZmlnLmRhdGE7CiAgICAgIGlmICghZGF0YS5sZW5ndGgpIHJldHVybjsKICAgICAgdmFyIGNhcHN1bGVWYWx1ZSA9IGRhdGEubWFwKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIHZhbHVlID0gX3JlZi52YWx1ZTsKICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgbWF4VmFsdWUgPSBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkoY2Fwc3VsZVZhbHVlKSk7CiAgICAgIHRoaXMuY2Fwc3VsZVZhbHVlID0gY2Fwc3VsZVZhbHVlOwogICAgICB0aGlzLmNhcHN1bGVMZW5ndGggPSBjYXBzdWxlVmFsdWUubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIG1heFZhbHVlID8gdiAvIG1heFZhbHVlIDogMDsKICAgICAgfSk7CiAgICAgIHZhciBvbmVGaWZ0aCA9IG1heFZhbHVlIC8gNTsKICAgICAgdmFyIGxhYmVsRGF0YSA9IEFycmF5LmZyb20obmV3IFNldChuZXcgQXJyYXkoNikuZmlsbCgwKS5tYXAoZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICByZXR1cm4gTWF0aC5jZWlsKGkgKiBvbmVGaWZ0aCk7CiAgICAgIH0pKSk7CiAgICAgIHRoaXMubGFiZWxEYXRhID0gbGFiZWxEYXRhOwogICAgICB0aGlzLmxhYmVsRGF0YUxlbmd0aCA9IEFycmF5LmZyb20obGFiZWxEYXRhKS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gbWF4VmFsdWUgPyB2IC8gbWF4VmFsdWUgOiAwOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgY2FsY0RhdGEoKTsKICB9Cn07"},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-capsule-chart\">\n    <template v-if=\"mergedConfig\">\n      <div class=\"label-column\">\n        <div v-for=\"item in mergedConfig.data\" :key=\"item.name\">{{ item.name }}</div>\n        <div>&nbsp;</div>\n      </div>\n\n      <div class=\"capsule-container\">\n        <div class=\"capsule-item\" v-for=\"(capsule, index) in capsuleLength\" :key=\"index\">\n          <div\n            class=\"capsule-item-column\"\n            :style=\"`width: ${capsule * 100}%; background-color: ${mergedConfig.colors[index % mergedConfig.colors.length]};`\"\n          >\n            <div\n              v-if=\"mergedConfig.showValue\"\n              class=\"capsule-item-value\"\n            >{{ capsuleValue[index] }}</div>\n          </div>\n        </div>\n\n        <div class=\"unit-label\">\n          <div\n            v-for=\"(label, index) in labelData\"\n            :key=\"label + index\"\n          >{{ label }}</div>\n        </div>\n      </div>\n\n      <div class=\"unit-text\" v-if=\"mergedConfig.unit\">{{ mergedConfig.unit }}</div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvCapsuleChart',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Capsule chart data\n         * @type {Array<Object>}\n         * @default data = []\n         * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n         */\n        data: [],\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: [\n          '#37a2da',\n          '#32c5e9',\n          '#67e0e3',\n          '#9fe6b8',\n          '#ffdb5c',\n          '#ff9f7f',\n          '#fb7293'\n        ],\n        /**\n         * @description Chart unit\n         * @type {String}\n         * @default unit = ''\n         */\n        unit: '',\n        /**\n         * @description Show item value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      capsuleLength: [],\n      capsuleValue: [],\n      labelData: [],\n      labelDataLength: []\n    }\n  },\n  watch: {\n    config() {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    calcData() {\n      const { mergeConfig, calcCapsuleLengthAndLabelData } = this\n\n      mergeConfig()\n\n      calcCapsuleLengthAndLabelData()\n    },\n    mergeConfig() {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    calcCapsuleLengthAndLabelData() {\n      const { data } = this.mergedConfig\n\n      if (!data.length) return\n\n      const capsuleValue = data.map(({ value }) => value)\n\n      const maxValue = Math.max(...capsuleValue)\n\n      this.capsuleValue = capsuleValue\n\n      this.capsuleLength = capsuleValue.map(v => (maxValue ? v / maxValue : 0))\n\n      const oneFifth = maxValue / 5\n\n      const labelData = Array.from(\n        new Set(new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth)))\n      )\n\n      this.labelData = labelData\n\n      this.labelDataLength = Array.from(labelData).map(v =>\n        maxValue ? v / maxValue : 0\n      )\n    }\n  },\n  mounted() {\n    const { calcData } = this\n\n    calcData()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src"}]}