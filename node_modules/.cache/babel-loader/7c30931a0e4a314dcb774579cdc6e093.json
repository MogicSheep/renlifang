{"remainingRequest":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src/main.vue","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wjcwjc/Desktop/大学/大三上/2020301人立方/hcube-b/hcube-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy93amN3amMvRGVza3RvcC9cdTU5MjdcdTVCNjYvXHU1OTI3XHU0RTA5XHU0RTBBLzIwMjAzMDFcdTRFQkFcdTdBQ0JcdTY1QjkvaGN1YmUtYi9oY3ViZS1jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ1JlbmRlciBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyJzsKaW1wb3J0ICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvZXh0ZW5kL2luZGV4JzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZEaWdpdGFsRmxvcCcsCiAgcHJvcHM6IHsKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlbmRlcmVyOiBudWxsLAogICAgICBkZWZhdWx0Q29uZmlnOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIE51bWJlciBmb3IgZGlnaXRhbCBmbG9wCiAgICAgICAgICogQHR5cGUge0FycmF5PE51bWJlcj59CiAgICAgICAgICogQGRlZmF1bHQgbnVtYmVyID0gW10KICAgICAgICAgKiBAZXhhbXBsZSBudW1iZXIgPSBbMTBdCiAgICAgICAgICovCiAgICAgICAgbnVtYmVyOiBbXSwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENvbnRlbnQgZm9ybWF0dGVyCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBjb250ZW50ID0gJycKICAgICAgICAgKiBAZXhhbXBsZSBjb250ZW50ID0gJ3tudH3kuKonCiAgICAgICAgICovCiAgICAgICAgY29udGVudDogJycsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBOdW1iZXIgdG9GaXhlZAogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgICogQGRlZmF1bHQgdG9GaXhlZCA9IDAKICAgICAgICAgKi8KICAgICAgICB0b0ZpeGVkOiAwLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBhbGlnbgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdGV4dEFsaWduID0gJ2NlbnRlcicKICAgICAgICAgKiBAZXhhbXBsZSB0ZXh0QWxpZ24gPSAnY2VudGVyJyB8ICdsZWZ0JyB8ICdyaWdodCcKICAgICAgICAgKi8KICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gcm93R2FwCiAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgQGRlZmF1bHQgcm93R2FwID0gMAogICAgICAgICAqLwogICAgICAgIHJvd0dhcDogMCwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgc3R5bGUgY29uZmlndXJhdGlvbgogICAgICAgICAqIEB0eXBlIHtPYmplY3R9IHtDUmVuZGVyIENsYXNzIFN0eWxlfQogICAgICAgICAqLwogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBmb250U2l6ZTogMzAsCiAgICAgICAgICBmaWxsOiAnIzNkZTdjOScKICAgICAgICB9LAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIGZvcm1hdHRlcgogICAgICAgICAqIEB0eXBlIHtOdWxsfEZ1bmN0aW9ufQogICAgICAgICAqLwogICAgICAgIGZvcm1hdHRlcjogdW5kZWZpbmVkLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ1JlbmRlciBhbmltYXRpb25DdXJ2ZQogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgYW5pbWF0aW9uQ3VydmUgPSAnZWFzZU91dEN1YmljJwogICAgICAgICAqLwogICAgICAgIGFuaW1hdGlvbkN1cnZlOiAnZWFzZU91dEN1YmljJywKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uRnJhbWUKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGFuaW1hdGlvbkZyYW1lID0gNTAKICAgICAgICAgKi8KICAgICAgICBhbmltYXRpb25GcmFtZTogNTAKICAgICAgfSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsLAogICAgICBncmFwaDogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZygpIHsKICAgICAgdmFyIHVwZGF0ZSA9IHRoaXMudXBkYXRlOwogICAgICB1cGRhdGUoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBpbml0UmVuZGVyID0gdGhpcy5pbml0UmVuZGVyLAogICAgICAgICAgbWVyZ2VDb25maWcgPSB0aGlzLm1lcmdlQ29uZmlnLAogICAgICAgICAgaW5pdEdyYXBoID0gdGhpcy5pbml0R3JhcGg7CiAgICAgIGluaXRSZW5kZXIoKTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgaW5pdEdyYXBoKCk7CiAgICB9LAogICAgaW5pdFJlbmRlcjogZnVuY3Rpb24gaW5pdFJlbmRlcigpIHsKICAgICAgdmFyICRyZWZzID0gdGhpcy4kcmVmczsKICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBDUmVuZGVyKCRyZWZzWydkaWdpdGFsLWZsb3AnXSk7CiAgICB9LAogICAgbWVyZ2VDb25maWc6IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKCkgewogICAgICB2YXIgZGVmYXVsdENvbmZpZyA9IHRoaXMuZGVmYXVsdENvbmZpZywKICAgICAgICAgIGNvbmZpZyA9IHRoaXMuY29uZmlnOwogICAgICB0aGlzLm1lcmdlZENvbmZpZyA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICB9LAogICAgaW5pdEdyYXBoOiBmdW5jdGlvbiBpbml0R3JhcGgoKSB7CiAgICAgIHZhciBnZXRTaGFwZSA9IHRoaXMuZ2V0U2hhcGUsCiAgICAgICAgICBnZXRTdHlsZSA9IHRoaXMuZ2V0U3R5bGUsCiAgICAgICAgICByZW5kZXJlciA9IHRoaXMucmVuZGVyZXIsCiAgICAgICAgICBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgdmFyIGFuaW1hdGlvbkN1cnZlID0gbWVyZ2VkQ29uZmlnLmFuaW1hdGlvbkN1cnZlLAogICAgICAgICAgYW5pbWF0aW9uRnJhbWUgPSBtZXJnZWRDb25maWcuYW5pbWF0aW9uRnJhbWU7CiAgICAgIHZhciBzaGFwZSA9IGdldFNoYXBlKCk7CiAgICAgIHZhciBzdHlsZSA9IGdldFN0eWxlKCk7CiAgICAgIHRoaXMuZ3JhcGggPSByZW5kZXJlci5hZGQoewogICAgICAgIG5hbWU6ICdudW1iZXJUZXh0JywKICAgICAgICBhbmltYXRpb25DdXJ2ZTogYW5pbWF0aW9uQ3VydmUsCiAgICAgICAgYW5pbWF0aW9uRnJhbWU6IGFuaW1hdGlvbkZyYW1lLAogICAgICAgIHNoYXBlOiBzaGFwZSwKICAgICAgICBzdHlsZTogc3R5bGUKICAgICAgfSk7CiAgICB9LAogICAgZ2V0U2hhcGU6IGZ1bmN0aW9uIGdldFNoYXBlKCkgewogICAgICB2YXIgX3RoaXMkbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWcsCiAgICAgICAgICBudW1iZXIgPSBfdGhpcyRtZXJnZWRDb25maWcubnVtYmVyLAogICAgICAgICAgY29udGVudCA9IF90aGlzJG1lcmdlZENvbmZpZy5jb250ZW50LAogICAgICAgICAgdG9GaXhlZCA9IF90aGlzJG1lcmdlZENvbmZpZy50b0ZpeGVkLAogICAgICAgICAgdGV4dEFsaWduID0gX3RoaXMkbWVyZ2VkQ29uZmlnLnRleHRBbGlnbiwKICAgICAgICAgIHJvd0dhcCA9IF90aGlzJG1lcmdlZENvbmZpZy5yb3dHYXAsCiAgICAgICAgICBmb3JtYXR0ZXIgPSBfdGhpcyRtZXJnZWRDb25maWcuZm9ybWF0dGVyOwoKICAgICAgdmFyIF90aGlzJHJlbmRlcmVyJGFyZWEgPSBfc2xpY2VkVG9BcnJheSh0aGlzLnJlbmRlcmVyLmFyZWEsIDIpLAogICAgICAgICAgdyA9IF90aGlzJHJlbmRlcmVyJGFyZWFbMF0sCiAgICAgICAgICBoID0gX3RoaXMkcmVuZGVyZXIkYXJlYVsxXTsKCiAgICAgIHZhciBwb3NpdGlvbiA9IFt3IC8gMiwgaCAvIDJdOwogICAgICBpZiAodGV4dEFsaWduID09PSAnbGVmdCcpIHBvc2l0aW9uWzBdID0gMDsKICAgICAgaWYgKHRleHRBbGlnbiA9PT0gJ3JpZ2h0JykgcG9zaXRpb25bMF0gPSB3OwogICAgICByZXR1cm4gewogICAgICAgIG51bWJlcjogbnVtYmVyLAogICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsCiAgICAgICAgdG9GaXhlZDogdG9GaXhlZCwKICAgICAgICBwb3NpdGlvbjogcG9zaXRpb24sCiAgICAgICAgcm93R2FwOiByb3dHYXAsCiAgICAgICAgZm9ybWF0dGVyOiBmb3JtYXR0ZXIKICAgICAgfTsKICAgIH0sCiAgICBnZXRTdHlsZTogZnVuY3Rpb24gZ2V0U3R5bGUoKSB7CiAgICAgIHZhciBfdGhpcyRtZXJnZWRDb25maWcyID0gdGhpcy5tZXJnZWRDb25maWcsCiAgICAgICAgICBzdHlsZSA9IF90aGlzJG1lcmdlZENvbmZpZzIuc3R5bGUsCiAgICAgICAgICB0ZXh0QWxpZ24gPSBfdGhpcyRtZXJnZWRDb25maWcyLnRleHRBbGlnbjsKICAgICAgcmV0dXJuIGRlZXBNZXJnZShzdHlsZSwgewogICAgICAgIHRleHRBbGlnbjogdGV4dEFsaWduLAogICAgICAgIHRleHRCYXNlbGluZTogJ21pZGRsZScKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIHZhciBtZXJnZUNvbmZpZyA9IHRoaXMubWVyZ2VDb25maWcsCiAgICAgICAgICBtZXJnZVNoYXBlID0gdGhpcy5tZXJnZVNoYXBlLAogICAgICAgICAgZ2V0U2hhcGUgPSB0aGlzLmdldFNoYXBlLAogICAgICAgICAgZ2V0U3R5bGUgPSB0aGlzLmdldFN0eWxlLAogICAgICAgICAgZ3JhcGggPSB0aGlzLmdyYXBoLAogICAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkVuZCgpOwogICAgICBtZXJnZUNvbmZpZygpOwogICAgICBpZiAoIWdyYXBoKSByZXR1cm47CiAgICAgIHZhciBhbmltYXRpb25DdXJ2ZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25DdXJ2ZSwKICAgICAgICAgIGFuaW1hdGlvbkZyYW1lID0gbWVyZ2VkQ29uZmlnLmFuaW1hdGlvbkZyYW1lOwogICAgICB2YXIgc2hhcGUgPSBnZXRTaGFwZSgpOwogICAgICB2YXIgc3R5bGUgPSBnZXRTdHlsZSgpOwogICAgICBtZXJnZVNoYXBlKGdyYXBoLCBzaGFwZSk7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkN1cnZlID0gYW5pbWF0aW9uQ3VydmU7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkZyYW1lID0gYW5pbWF0aW9uRnJhbWU7CiAgICAgIGdyYXBoLmFuaW1hdGlvbignc3R5bGUnLCBzdHlsZSwgdHJ1ZSk7CiAgICAgIGdyYXBoLmFuaW1hdGlvbignc2hhcGUnLCBzaGFwZSk7CiAgICB9LAogICAgbWVyZ2VTaGFwZTogZnVuY3Rpb24gbWVyZ2VTaGFwZShncmFwaCwgc2hhcGUpIHsKICAgICAgdmFyIGNhY2hlTnVtID0gZ3JhcGguc2hhcGUubnVtYmVyLmxlbmd0aDsKICAgICAgdmFyIHNoYXBlTnVtID0gc2hhcGUubnVtYmVyLmxlbmd0aDsKICAgICAgaWYgKGNhY2hlTnVtICE9PSBzaGFwZU51bSkgZ3JhcGguc2hhcGUubnVtYmVyID0gc2hhcGUubnVtYmVyOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBpbml0ID0gdGhpcy5pbml0OwogICAgaW5pdCgpOwogIH0KfTs="},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-digital-flop\">\n    <canvas ref=\"digital-flop\" />\n  </div>\n</template>\n\n<script>\nimport CRender from '@jiaminghi/c-render'\n\nimport '@jiaminghi/charts/lib/extend/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDigitalFlop',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      renderer: null,\n\n      defaultConfig: {\n        /**\n         * @description Number for digital flop\n         * @type {Array<Number>}\n         * @default number = []\n         * @example number = [10]\n         */\n        number: [],\n        /**\n         * @description Content formatter\n         * @type {String}\n         * @default content = ''\n         * @example content = '{nt}个'\n         */\n        content: '',\n        /**\n         * @description Number toFixed\n         * @type {Number}\n         * @default toFixed = 0\n         */\n        toFixed: 0,\n        /**\n         * @description Text align\n         * @type {String}\n         * @default textAlign = 'center'\n         * @example textAlign = 'center' | 'left' | 'right'\n         */\n        textAlign: 'center',\n        /**\n         * @description rowGap\n         * @type {Number}\n         @default rowGap = 0\n         */\n        rowGap: 0,\n        /**\n         * @description Text style configuration\n         * @type {Object} {CRender Class Style}\n         */\n        style: {\n          fontSize: 30,\n          fill: '#3de7c9'\n        },\n        /**\n         * @description Number formatter\n         * @type {Null|Function}\n         */\n        formatter: undefined,\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50\n      },\n\n      mergedConfig: null,\n\n      graph: null\n    }\n  },\n  watch: {\n    config () {\n      const { update } = this\n\n      update()\n    }\n  },\n  methods: {\n    init () {\n      const { initRender, mergeConfig, initGraph } = this\n\n      initRender()\n\n      mergeConfig()\n\n      initGraph()\n    },\n    initRender () {\n      const { $refs } = this\n\n      this.renderer = new CRender($refs['digital-flop'])\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initGraph () {\n      const { getShape, getStyle, renderer, mergedConfig } = this\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      this.graph = renderer.add({\n        name: 'numberText',\n        animationCurve,\n        animationFrame,\n        shape,\n        style\n      })\n    },\n    getShape () {\n      const { number, content, toFixed, textAlign, rowGap, formatter } = this.mergedConfig\n\n      const [w, h] = this.renderer.area\n\n      const position = [w / 2, h / 2]\n\n      if (textAlign === 'left') position[0] = 0\n      if (textAlign === 'right') position[0] = w\n\n      return {\n        number,\n        content,\n        toFixed,\n        position,\n        rowGap,\n        formatter\n      }\n    },\n    getStyle () {\n      const { style, textAlign } = this.mergedConfig\n\n      return deepMerge(style, {\n        textAlign,\n        textBaseline: 'middle'\n      })\n    },\n    update () {\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\n\n      graph.animationEnd()\n\n      mergeConfig()\n\n      if (!graph) return\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      mergeShape(graph, shape)\n\n      graph.animationCurve = animationCurve\n      graph.animationFrame = animationFrame\n\n      graph.animation('style', style, true)\n      graph.animation('shape', shape)\n    },\n    mergeShape (graph, shape) {\n      const cacheNum = graph.shape.number.length\n      const shapeNum = shape.number.length\n\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src"}]}